<script>
  // form de código busca por nome ou código do produto e desce dropdown
  // com isso o produto pode ser enconrado pelo nome caso não se lembre do código de um produto específico
  document.getElementById("product-create-form").addEventListener("submit", async e => {
    e.preventDefault();

    let product = new FormData();
    product.append('id', e.target.id.value);
    product.append('code', e.target.code.value);
    product.append('name', e.target.name.value);
    product.append('description', e.target.description.value);

    let variation_box = document.getElementById("create-variation-box");
    Array.from(variation_box.querySelectorAll("select")).map(input => {
      product.append(`${`variations`}`, input.value);
    });

    const input = document.getElementById('files');
    if (!input.files.length) {
      if (!confirm("Tem certeza que não deseja incluir imagens do produto?")) { return false; }
    }

    for (let i in input.files) {
      product.append('file', input.files[i]);
    };

    let response = await API.response(Product.save, product);
    if (!response) { return false; }

    e.target.id.value = "";
    e.target.code.value = "";
    e.target.name.value = "";
    e.target.description.value = "";

    Array.from(variation_box.querySelectorAll("select")).map(input => {
      input.value = "";
    });

    clearFileList();
    drawImages([]);

    lib.display("product-image-box", "none");

    document.getElementById("product-filter-form").submit.click();
  });

  async function productEdit(id) {
    let product = await API.response(Product.findById, id);
    if (!product) { return false };

    lib.display("product-image-box", "");
    drawImages(product.images);

    document.getElementById("product-create-form").scrollIntoView();
    lib.display("product-create-form", "");
    document.getElementById("product-create-expander").src = "/images/icon/retract.png";

    const product_create_form = document.getElementById('product-create-form');
    product_create_form.id.value = product.id;
    product_create_form.code.value = product.code;
    product_create_form.name.value = product.name;
    product_create_form.description.value = product.description;

    let variation_box = document.getElementById("create-variation-box");
    product.variations.forEach(variation => {
      Array.from(variation_box.querySelectorAll("select")).map(input => {
        input.querySelectorAll('option').forEach(option => {
          if (option.value == variation.variation_id) {
            input.value = option.value;
          }
        });
      });
    });

    clearFileList();
  };

  async function productDelete(id) {
    let r = confirm('Deseja realmente excluir o produto? Atenção, essa ação não pode ser desfeita!');
    if (r) {
      if (!await API.response(Product.delete, id)) { return false; };
      document.getElementById("product-filter-form").submit.click();
    }
  };
</script>